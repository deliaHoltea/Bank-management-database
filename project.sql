--Crearea tabelelor
CREATE TABLE ANGAJAT (
  ID_ANGAJAT NUMBER(10),
  NUME VARCHAR2(25),
  PRENUME VARCHAR2(30),
  TELEFON NUMBER(10),
  ID_FUNCTIE VARCHAR2(10)  CONSTRAINT pk_angajat PRIMARY KEY,
  EMAIL VARCHAR2(50),
  DATA_ANGAJARE DATE
);

CREATE TABLE FUNCTIE (
  ID_FUNCTIE VARCHAR2(10) ,
  DENUMIRE_FUNCTIE VARCHAR2(50) CONSTRAINT pk_functie PRIMARY KEY,
  SALARIU NUMBER(7),
  PRIME NUMBER(7)
);

CREATE TABLE CLIENT (
CNP NUMBER (14),
NUME VARCHAR2(25),
PRENUME VARCHAR2(30),
TELEFON VARCHAR2(15),
ID_ANGAJAT_RESPONSABIL  NUMBER(10) CONSTRAINT pk_client PRIMARY KEY
);

CREATE TABLE CONTRACT (
ID_CONTRACT NUMBER(10),
CNP_CLIENT NUMBER(14)CONSTRAINT pk_contract PRIMARY KEY,
TIP_CONTRACT VARCHAR2(25),
DATA_DESCHIDERE DATE,
DATA_EXPIRARE DATE,
SUMA_CONTRACT NUMBER(20), 
DOBANDA NUMBER(20));

CREATE TABLE CARD(
ID_CARD NUMBER(10),
CNP_CLIENT NUMBER (14) CONSTRAINT pk_card PRIMARY KEY,
SOLD NUMBER(20),
IBAN NUMBER(25),
NUMAR_CARD NUMBER (17));

ALTER TABLE FUNCTIE
ADD  CONSTRAINT fk_angajat FOREIGN KEY (ID_FUNCTIE) REFERENCES ANGAJAT(ID_FUNCTIE);

ALTER TABLE CLIENT
ADD CONSTRAINT fk_contract FOREIGN KEY(CNP) REFERENCES CONTRACT(CNP_CLIENT);

ALTER TABLE ANGAJAT
ADD CONSTRAINT fk_client FOREIGN KEY(ID_ANGAJAT) REFERENCES CLIENT(ID_ANGAJAT_RESPONSABIL);

ALTER TABLE CLIENT
ADD CONSTRAINT fk_card FOREIGN KEY (CNP) REFERENCES CARD(CNP_CLIENT);

--Adaugare inregistrari.
INSERT INTO CARD VALUES(12, 6040510280857, 200, 23415678393, 4156031141668612);
INSERT INTO CONTRACT VALUES( 12, 6040510280857, 'CREDIT', TO_DATE('10-05-2015', 'DD-MM-YYYY'), TO_DATE('10-05-2025', 'DD-MM-YYYY'), 234, 0.02);
INSERT INTO CLIENT VALUES( 6040510280857, 'HOLTEA', 'DELIA-GEORGIANA', '+40732724640', 4444);
INSERT INTO ANGAJAT VALUES(4444, 'POPESCU', 'GIGEL', 0722222222, 'IT', 'email@yahoo.com', TO_DATE('23-04-2020', 'DD-MM-YYYY'));
INSERT INTO FUNCTIE VALUES('IT', 'PROGRAMMER', 6400, 350);
INSERT INTO CARD VALUES (25, 5030130280861, 1000, 476972659283,15433525);
INSERT INTO CONTRACT VALUES(30, 5030130280861, 'DEBIT', TO_DATE('30-01-2020', 'DD-MM-YYYY'), TO_DATE ('30-01-2030','DD-MM-YYYY'), 112, 0.5);        
INSERT INTO CLIENT VALUES(5030130280861, 'DUMITRESCU', 'COSTEL', '+40722334455', 1235);

--Actualizare inregistrari
UPDATE FUNCTIE
SET PRIME=400
WHERE UPPER(ID_FUNCTIE)='IT';

DELETE FROM CARD
WHERE CNP_CLIENT=5030130280861;

UPDATE CONTRACT
SET DOBANDA=DOBANDA+0.02
WHERE EXTRACT( YEAR FROM DATA_DESCHIDERE)>2020;

--Stergerea si recuperarea unei tabele
DROP TABLE FUNCTIE;
FLASHBACK TABLE FUNCTIE TO BEFORE DROP;

DROP TABLE ANGAJAT CASCADE CONSTRAINTS;
FLASHBACK TABLE ANGAJAT TO BEFORE DROP;

--Exemple de interogari+ vedere, index, sinonim
--1. Sa se afiseze CNP-ul, numarul de contrate al fiecarui client.
SELECT CNP_CLIENT, COUNT(ID_CONTRACT) AS NUMAR_CONTRACTE
FROM CONTRACT
GROUP BY CNP_CLIENT;

--2. Sa se afiseze numele, prenumele si anul angajarii al tuturor angajatilor.
SELECT NUME, PRENUME, TO_CHAR(DATA_ANGAJARE, 'YYYY') AS AN_ANGAJARE
FROM ANGAJAT;

--3.Sa se afiseze functia angajatului cu id-ul 123. 
SELECT DENUMIRE_FUNCTIE
FROM FUNCTIE
WHERE ID_FUNCTIE = (SELECT ID_FUNCTIE FROM ANGAJAT WHERE ID_ANGAJAT = 123);

--4.Sa se afiseze id-ul functiei si salariul mediu al functiilor care au salariul mediu mai mare de 3000.
SELECT ID_FUNCTIE, AVG(SALARIU) AS SALARIU_MEDIU
FROM FUNCTIE
GROUP BY ID_FUNCTIE
HAVING AVG(SALARIU) >3000;

--5.Sa se afiseze numele si luna angajarii ale angajatilor care nu au fost angajati in 2021.
SELECT NUME, EXTRACT(MONTH FROM DATA_ANGAJARE) AS LUNA_ANGAJARE
FROM ANGAJAT
WHERE EXTRACT(YEAR FROM DATA_ANGAJARE) != 2021;

--6.Sa se afiseze cnp-ul si id_ul angajatilor in aceeasi coloana numita ientificator.
SELECT CNP AS IDENTIFICATOR FROM CLIENT
UNION
SELECT ID_ANGAJAT AS IDENTIFICATOR FROM ANGAJAT;

--7.Sa se afiseze numele si salariul ahngajatilor care au salariul mai mare decat salariul mediu al tuturor angajatilor.
SELECT A.NUME, F.SALARIU
FROM ANGAJAT A, FUNCTIE F
WHERE F.SALARIU > (SELECT AVG(F.SALARIU) FROM FUNCTIE F WHERE A.ID_FUNCTIE = F.ID_FUNCTIE);

--8. Sa se afiseze datele despre contractele care au fost deschise intre 1 ianuarie 2020 si 31 decembrie 2022.
SELECT * FROM CONTRACT
WHERE DATA_DESCHIDERE BETWEEN TO_DATE('01-01-2020', 'DD-MM-YYYY') AND TO_DATE('31-12-2022', 'DD-MM-YYYY');

--9.Afi?a?i o structurã ierarhicã simplã a angaja?ilor sub forma unui tabel.
SELECT LEVEL, A.ID_ANGAJAT, A.NUME, A.PRENUME, C.ID_ANGAJAT_RESPONSABIL
FROM ANGAJAT A, CLIENT C
START WITH C.ID_ANGAJAT_RESPONSABIL IS NULL
CONNECT BY PRIOR A.ID_ANGAJAT = C.ID_ANGAJAT_RESPONSABIL;

--10.Creeati o vedere virtuala doar cu coloanele nume, prenume, id angajat si id functie.
CREATE VIEW ANGAJAT_VIEW AS
SELECT ID_ANGAJAT, NUME, PRENUME, ID_FUNCTIE
FROM ANGAJAT;

--11. Creeati un index pentru numele angajatilor.
CREATE INDEX idx_angajat_nume ON ANGAJAT(NUME);

--12. Creeati un sinonim pentru tabela virtuala ANGAJAT_VIEW.
CREATE SYNONYM ANGAJAT_SYN FOR ANGAJAT_VIEW;

--13. Afisati denumirea functiilor si tipul salariilor dupa urmatoarele criterii:
--a) daca salariul este mai mic de 2000 lei, atunci e salariu mininm
--b)daca salariul este cuprins intre 2000 si 5000 este mediu
--c) daca este peste 5000 este peste medie.
SELECT DENUMIRE_FUNCTIE,
CASE
        WHEN SALARIU < 2000 THEN 'Salariu minim'
        WHEN SALARIU BETWEEN 2000 AND 5000 THEN 'Salariu mediu'
        WHEN SALARIU > 5000 THEN 'Peste medie'
        ELSE 'Nedefinit'
    END AS TIP_SALARIU
FROM FUNCTIE;

--14.Ob?ine?i o listã care sã includã toate informa?iile despre angaja?i ?i func?iile lor. 
SELECT * FROM ANGAJAT JOIN FUNCTIE ON ANGAJAT.ID_FUNCTIE = FUNCTIE.ID_FUNCTIE;

--15. Afisati angajatii al caror nume incepe cu P.
SELECT *
FROM ANGAJAT
WHERE UPPER(SUBSTR(NUME, 1, 1)) = 'P';

--.16.Sa se afiseze cnp-ul si telefonul tuturor clientilor care au sau nu un angajat responsabil. Daca telefonul acestora este nul, sa se afiseze 'NECUNOSCUT'. 
SELECT C.CNP, NVL(C.TELEFON, 'NECUNOSCUT') AS TELEFON FROM CLIENT C, ANGAJAT A
WHERE C.ID_ANGAJAT_RESPONSABIL(+) = A.ID_ANGAJAT;

--17.Sa se afiseze contractele care au fost deschise de mai mult de 3 ani.
SELECT * FROM CONTRACT
WHERE MONTHS_BETWEEN(SYSDATE, DATA_DESCHIDERE) > 36;

--18.Sa se afiseze clientii majori.
SELECT NUME,PRENUME FROM CLIENT
WHERE CONCAT( SUBSTR(CNP, 2, 1), SUBSTR(CNP, 3,1)) <5 ;

--19.Sa se afiseze soldul tuturor clientilor al caror angajat responsabil are id-ul 4444.
SELECT CD.SOLD FROM CARD CD, CLIENT CL,ANGAJAT A
WHERE A.ID_ANGAJAT=CL.ID_ANGAJAT_RESPONSABIL AND CD.CNP_CLIENT=CL.CNP ;

--20.Mariti dobanda cu 0.3 a contractelor incheiate de angajatul cu id-ul 1235.
--Afisati modificarile.
UPDATE CONTRACT
SET DOBANDA = DOBANDA + 0.3
WHERE CNP_CLIENT IN (SELECT CNP FROM CLIENT WHERE ID_ANGAJAT_RESPONSABIL = 1235);
SELECT* FROM CONTRACT;

